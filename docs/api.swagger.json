{
    "swagger": "2.0",
    "info": {
        "description": "The API for viewing or editting projects managed by the SubPar-project tracker",
        "version": "0.0.1",
        "title": "SubPar-project tracker",
        "contact": {
            "name": "Chrolo @ DameDesuYo",
            "url": "http://github.com/Chrolo/subpar-project-tracker"
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "paths": {
        "/projects": {
            "get": {
                "summary": "get a list of project names",
                "description": "get an array of project names currently on the system. Can (will later) include url parameters search to filter results",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name to search by. Can be shorthand",
                        "type": "string"
                    },
                    {
                        "name": "projectType",
                        "in": "query",
                        "description": "The type of project to filter by",
                        "type": "string",
                        "enum": [
                            "TV",
                            "BD"
                        ]
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The year it was released (based on season it began airing / was release on sale)",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of project names, filtered by any applied queries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new project",
                "description": "Add a new project to the database.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "body",
                        "description": "The details of the project to be added",
                        "schema": {
                            "$ref": "#definitions/projectTemplate_schema.json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project was added to database"
                    },
                    "403": {
                        "description": "You don't have permission to add new projects to the database"
                    }
                }
            }
        },
        "/projects/:projectName": {
            "get": {
                "summary": "get project details",
                "description": "get project details.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "project details",
                        "schema": {
                            "$ref": "#/definitions/project_schema.json"
                        }
                    }
                }
            }
        },
        "/projects/:projectName/episodes/:episode": {
            "get": {
                "summary": "Get information about an episode of a project",
                "description": "Get a JSON object representing information about that project.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "episode information",
                        "schema": {
                            "$ref": "#/definitions/episodeFile_schema.json"
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            }
        },
        "/projects/:projectName/episodes/:episodeNumber/tasks/:taskName": {
            "patch": {
                "summary": "update the status of a task",
                "description": "edit the status of a task",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "changes to the task",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "complete": {
                                    "type": "boolean",
                                    "description": "is the task complete? (the server will determine timestamp for completion)"
                                },
                                "newStaff": {
                                    "type": "string",
                                    "description": "The name of the new staff member to assign this task to"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "task status updated successfully"
                    },
                    "403": {
                        "description": "You are not authorised to adjust that task"
                    }
                }
            }
        }
    },
    "definitions": {
        "episodeFile_schema.json": {
            "type": "object",
            "description": "A release file associated to an episode of a project",
            "properties": {
                "fileName": {
                    "type": "string",
                    "description": "name of the file"
                },
                "ftpFilePath": {
                    "type": "string",
                    "description": "location of file on ftp"
                },
                "version": {
                    "type": "number",
                    "description": "the version number of this file"
                },
                "quality": {
                    "type": "string",
                    "enum": [
                        "720p",
                        "1080p"
                    ]
                }
            },
            "additionalProperties": false
        },
        "episode_schema.json": {
            "type": "object",
            "properties": {
                "episodeNumber": {
                    "type": "integer",
                    "description": "The episode number."
                },
                "episodeName": {
                    "type": "string",
                    "description": "The name of the episode"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task_schema.json"
                    }
                },
                "completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the episode was completed (null if incomplete)"
                },
                "files": {
                    "type": "array",
                    "description": "array of release files for this episode (can be varying quality and versions)",
                    "items": {
                        "$ref": "#/definitions/episodeFile_schema.json"
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "episodeNumber"
            ]
        },
        "projectTemplate_schema.json": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the project"
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "other names for the show"
                },
                "episodeCount": {
                    "type": "integer",
                    "description": "The number of episodes in the project. (Initially)"
                },
                "projectType": {
                    "type": "string",
                    "enum": [
                        "TV",
                        "BD",
                        "OVA",
                        "FILM",
                        "MISC"
                    ]
                },
                "defaultTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task_schema.json"
                    },
                    "description": "The standard set of tasks to be applied to each episode."
                }
            },
            "additionalProperties": false,
            "required": [
                "name",
                "episodeCount",
                "projectType",
                "defaultTasks"
            ]
        },
        "project_schema.json": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the project"
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "episodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episode_schema.json"
                    }
                },
                "completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the project was completed (null if incomplete)"
                },
                "projectType": {
                    "type": "string",
                    "enum": [
                        "TV",
                        "BD",
                        "OVA",
                        "FILM",
                        "MISC"
                    ]
                }
            },
            "additionalProperties": false
        },
        "taskUpdatePatch_schema.json": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "newStaff": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "task_schema.json": {
            "type": "object",
            "properties": {
                "taskName": {
                    "type": "string",
                    "description": "The name of the task"
                },
                "completed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "the date the task was completed."
                },
                "staffName": {
                    "type": "string",
                    "description": "name of the staff memeber responsible for this task"
                },
                "dependsOn": {
                    "type": "array",
                    "description": "Tasks that must be completed before this task.",
                    "items": {
                        "type": "integer",
                        "description": "TaskId of task that should be complete before this one"
                    }
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the task was last updated"
                },
                "episodeId": {
                    "type": "integer",
                    "description": "the episode the task is related to"
                }
            },
            "additionalProperties": false,
            "required": [
                "staffName",
                "taskName"
            ]
        }
    }
}